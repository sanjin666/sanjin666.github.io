(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{525:function(t,e,n){"use strict";n.r(e);var s=n(6),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("先检查浏览器的 DNS 缓存，没有则检查本地 hosts 文件的缓存，如果仍然没有会向本地 DNS 服务器发送请求，最终本地 DNS 服务器得到域名和 IP 地址的映射关系，把结果返回给用户并进行缓存。")]),t._v(" "),n("p",[t._v("获取 IP 地址后，通过 TCP 三次握手建立连接，发送请求报文。")]),t._v(" "),n("p",[t._v("服务器收到请求报文后进行响应，主进程进行监听，创建子进程处理，先判断是否是重定向，如果是重定向则返回重定向地址。如果是静态资源则直接返回，否则通过 REST URL 在代码层面处理，最后返回响应报文。")]),t._v(" "),n("p",[t._v("浏览器收到 HTTP 响应报文后进行解析，首先查看响应报文的状态码，根据不同的状态码做不同处理。之后解析 HTML、CSS、JS 等文件，构建 DOM 树，渲染树，重绘。最后将像素发送 GPU 进行渲染，将渲染结果返回给用户并进行缓存。")]),t._v(" "),n("p",[t._v("通过 TCP 的四次挥手断开连接，如果是 HTTP1.1 则会将连接保持一小段时间。")])])}),[],!1,null,null,null);e.default=o.exports}}]);